version: '3.4'

services:
    gateway.api:
        image: gateway.api
        build:
            context: .
            dockerfile: Gateway.API/Dockerfile
        ports:
            - 9901:9901
            - 10000:10000
            - 10001:10001
        volumes:
            - ./Gateway.API/envoy.yaml:/etc/envoy/envoy.yaml
            - ./Gateway.API/https.crt:/etc/ssl/certs/https.crt
            - ./Gateway.API/key.pem:/etc/ssl/certs/key.pem
        depends_on:
            - authorization.api
            - offices.api
            - profiles.api
            - services.api
            - appointments.write.api
            - appointments.read.api
            - documents.api

    authorization.api:
        image: authorization.api
        build:
            context: .
            dockerfile: Authorization.API/Dockerfile
        ports:
            - 8020:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - sqlServer
            - rabbitMQ

    offices.api:
        image: offices.api
        build:
            context: .
            dockerfile: Offices.API/Dockerfile
        ports:
            - 8021:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - postgreSqlServer
            - rabbitMQ

    profiles.api:
        image: profile.api
        build:
              context: .
              dockerfile: Profiles.API/Dockerfile
        ports:
            - 8022:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - sqlServer
            - rabbitMQ

    services.api:
        image: services.api
        build:
            context: .
            dockerfile: Services.API/Dockerfile
        ports:
            - 8023:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - sqlServer
            - rabbitMQ

    appointments.write.api:
        image: appointments.write.api
        build:
            context: .
            dockerfile: Appointments.Write.API/Dockerfile
        ports:
            - 8024:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - postgreSqlServer
            - rabbitMQ

    appointments.read.api:
        image: appointments.read.api
        build:
            context: .
            dockerfile: Appointments.Read.API/Dockerfile
        ports:
            - 8025:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - TZ=Europe/Moscow
        restart: on-failure
        depends_on:
            - postgreSqlServer
            - rabbitMQ

    documents.api:
        image: documents.api
        build:
            context: .
            dockerfile: Documents.API/Dockerfile
        ports:
            - 8026:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - azurite
            - rabbitMQ

    logs.api:
        image: logs.api
        build:
            context: .
            dockerfile: Logs.API/Dockerfile
        ports:
            - 8027:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        restart: on-failure
        depends_on:
            - mongoDb
            - rabbitMQ

    sqlServer:
        image: mcr.microsoft.com/mssql/server:2022-latest
        user: root
        volumes:
            - sqlServerData:/var/opt/mssql/data
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=AAbbCC123
        ports:
            - 1442:1433
        restart: on-failure

    postgreSqlServer:
        image: postgres:latest
        user: postgres
        volumes:
            - postgreSqlData:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=123
        ports:
            - 1443:5432
        restart: on-failure

    azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        command: azurite --loose --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001
        hostname: azurite
        ports:
            - 10010:10000
            - 10011:10001
            - 10012:10002
        volumes:
            - azuriteData:/data
        restart: on-failure

    mongoDb:
        image: mongo
        restart: on-failure
        ports:
          - 27018:27017
        volumes:
            - mongoDbData:/data/db


    rabbitMQ:
        image: rabbitmq:management
        ports:
            - 5672:5672
            - 15672:15672
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        volumes:
            - rabbitMQ:/var/lib/rabbitmq
        hostname: rabbit
        restart: on-failure

volumes:
    sqlServerData:
    postgreSqlData:
    azuriteData:
    mongoDbData:
    rabbitMQ:
