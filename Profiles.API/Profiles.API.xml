<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Profiles.API</name>
    </assembly>
    <members>
        <member name="T:Profiles.API.Controllers.DoctorsController">
            <summary>
            This controller used to work with doctors's profiles
            </summary>
        </member>
        <member name="M:Profiles.API.Controllers.DoctorsController.GetDoctorById(System.Guid)">
            <summary>
            Get doctor's profile by Id
            </summary>
            <param name="id">Doctor's profile unique identifier</param>
        </member>
        <member name="M:Profiles.API.Controllers.DoctorsController.GetDoctors(Shared.Models.Request.Profiles.Doctor.GetDoctorsRequestModel)">
            <summary>
            Get paged doctors profiles by filter
            </summary>
            <param name="request">Contains properties for paging and filtering among doctors</param>
        </member>
        <member name="M:Profiles.API.Controllers.DoctorsController.CreateDoctor(Shared.Models.Request.Profiles.Doctor.CreateDoctorRequestModel)">
            <summary>
            Create new doctor's profile
            </summary>
            <param name="request">Contains all data that need to create doctor's profile entity</param>
        </member>
        <member name="M:Profiles.API.Controllers.DoctorsController.UpdateDoctor(System.Guid,Shared.Models.Request.Profiles.Doctor.UpdateDoctorRequestModel)">
            <summary>
            Edit specific doctor's profile
            </summary>
            <param name="id">Doctor's profile unique identifier</param>
            <param name="request">Contains new values for all doctor's profile entity properties</param>
        </member>
        <member name="M:Profiles.API.Controllers.DoctorsController.DeleteDoctor(System.Guid)">
            <summary>
            Remove specific doctor's profile from storage
            </summary>
            <param name="id">Doctor's profile unique identifier</param>
        </member>
        <member name="M:Profiles.API.Controllers.DoctorsController.ChangeStatus(System.Guid,Shared.Models.Request.Profiles.Doctor.ChangeStatusRequestModel)">
            <summary>
            Change doctor's status
            </summary>
            <param name="id">Doctor's profile unique identifier</param>
            <param name="request">Contains new doctor'status</param>
        </member>
        <member name="T:Profiles.API.Controllers.PatientsController">
            <summary>
            This controller used to work with Patient's profiles
            </summary>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.GetPatientById(System.Guid)">
            <summary>
            Get patient's profile by Id
            </summary>
            <param name="id">Patient's profile unique identifier</param>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.GetPatients(Shared.Models.Request.Profiles.Patient.GetPatientsRequestModel)">
            <summary>
            Get paged patients profiles by filter
            </summary>
            <param name="request">Contains properties for paging and filtering among patients</param>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.CreatePatient(Shared.Models.Request.Profiles.Patient.CreatePatientRequestModel)">
            <summary>
            Create new patient's profile
            </summary>
            <param name="request">Contains all data that need to create patient's profile entity</param>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.GetMatch(Shared.Models.Request.Profiles.Patient.GetMatchedPatientRequestModel)">
            <summary>
            Try find a match among the existed profiles.
            </summary>
            <param name="request">Contains properties for filtering among profiles and find a match</param>
            <returns>Given a match with profile has been found returns founded profile. Otherwise - returns null</returns>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.DeletePatient(System.Guid)">
            <summary>
            Remove specific patient's profile from storage
            </summary>
            <param name="id">Patient's profile unique identifier</param>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.UpdatePatient(System.Guid,Shared.Models.Request.Profiles.Patient.UpdatePatientRequestModel)">
            <summary>
            Edit specific patient's profile
            </summary>
            <param name="id">Patient's profile unique identifier</param>
            <param name="request">Contains new values for all patient's profile entity properties</param>
        </member>
        <member name="M:Profiles.API.Controllers.PatientsController.LinkToAccount(System.Guid,System.Guid)">
            <summary>
            Link specific patient's profile to account when user want to accept matched profile with this input.
            </summary>
            <param name="id"></param>
            <param name="accountId"></param>
        </member>
    </members>
</doc>
